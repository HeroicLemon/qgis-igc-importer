# This file contains metadata for your plugin. Since 
# version 2.0 of QGIS this is the proper way to supply 
# information about a plugin. The old method of 
# embedding metadata in __init__.py will 
# is no longer supported since version 2.0.

# This file should be included when you package your plugin.# Mandatory items:

[general]
name=GPX Segment Importer
qgisMinimumVersion=2.0
description=This plugin imports an GPX file and creates short line segments between the track points
version=1.1
author=Simon Gröchenig @ Salzburg Research
email=simon.groechenig@salzburgresearch.at

about=This plugin imports an GPX file and creates short line segments between the track points. Features include:
    * Select one or multiple GPX files with the same data structure at once.
    * Read all attributes available with each track point. This includes the timestamp and the elevation as well as any other attributes added to a track point.
    * To gain full control over the data, you can edit the attribute table before creating the segment layer. The user can select the attributes that should be included in the layer, modify the attribute label and change the data type (integer, double, boolean or string) if the automatic type detection failed, e.g. at numeric data that contains “Null” or “None” values.
    * The plugin detects attributes that do not have a value and deselects it. Values can still be selected manually.
    * Create a temporary memory layer or write the layer to a file (Shapefile in current version, future plans are to switch to GeoPackage).

tracker=https://github.com/SGroe/gpx-segment-importer/issues
repository=https://github.com/SGroe/gpx-segment-importer
# End of mandatory metadata

# Recommended items:

# Uncomment the following line and add your changelog:
changelog=1.1
    - New SVG icon
    - Improved boolean handling
    1.0
    - Initial release

# Tags are comma separated with spaces allowed
tags=GPX,segments,importer

homepage=https://github.com/SGroe/gpx-segment-importer
category=Vector
icon=icon.svg
# experimental flag
experimental=False

# deprecated flag (applies to the whole plugin, not just a single version)
deprecated=False

